#include "pch.h"

using namespace std;
/*
	*https://www.acmicpc.net/problem/10869

	Date : 23.03.09

	문제
	두 자연수 A와 B가 주어진다. 이때, A+B, A-B, A*B, A/B(몫), A%B(나머지)를 출력하는 프로그램을 작성하시오.

	입력
	두 자연수 A와 B가 주어진다. (1 ≤ A, B ≤ 10,000)

	출력
	첫째 줄에 A+B, 둘째 줄에 A-B, 셋째 줄에 A*B, 넷째 줄에 A/B, 다섯째 줄에 A%B를 출력한다.

	예제 입력 1
	7 3

	예제 출력 1
	10
	4
	21
	2
	1
*/
void 사칙연산()
{
	int a = 0;
	int b = 0;
	cin >> a;
	cin >> b;

	cout << a + b << "\n";
	cout << a - b << "\n";
	cout << a * b << "\n";
	cout << a / b << "\n";
	cout << a % b << "\n";
}

/*
	https://www.acmicpc.net/problem/2588

	Date : 23.03.09

	문제
	(세 자리 수) × (세 자리 수)는 다음과 같은 과정을 통하여 이루어진다.
	(1)과 (2)위치에 들어갈 세 자리 자연수가 주어질 때 (3), (4), (5), (6)위치에 들어갈 값을 구하는 프로그램을 작성하시오.

	입력
	첫째 줄에 (1)의 위치에 들어갈 세 자리 자연수가, 둘째 줄에 (2)의 위치에 들어갈 세자리 자연수가 주어진다.

	출력
	첫째 줄부터 넷째 줄까지 차례대로 (3), (4), (5), (6)에 들어갈 값을 출력한다.

	예제 입력 1
	472
	385
	예제 출력 1
	2360
	3776
	1416
	181720
*/
void 곱셈()
{
	int a = 0;
	int b = 0;
	cin >> a;
	cin >> b;

	int b1, b10, b100;//1의 자리, 10의 자리, 100의 자리

	int bOrigin = b;

	b100 = b / 100;
	b -= b100 * 100;
	b10 = b / 10;
	b -= b10 * 10;
	b1 = b;

	//(3)
	cout << a * b1 << "\n";

	//(4)
	cout << a * b10 << "\n";

	//(5)
	cout << a * b100 << "\n";

	//(6)
	cout << a * bOrigin << "\n";

}

/*
	https://www.acmicpc.net/problem/2884

	Date : 23.03.09

	문제
	상근이는 매일 아침 알람을 듣고 일어난다. 알람을 듣고 바로 일어나면 다행이겠지만, 항상 조금만 더 자려는 마음 때문에 매일 학교를 지각하고 있다.
	상근이는 모든 방법을 동원해보았지만, 조금만 더 자려는 마음은 그 어떤 것도 없앨 수가 없었다.
	이런 상근이를 불쌍하게 보던 창영이는 자신이 사용하는 방법을 추천해 주었다.
	바로 "45분 일찍 알람 설정하기"이다.
	이 방법은 단순하다. 원래 설정되어 있는 알람을 45분 앞서는 시간으로 바꾸는 것이다. 어차피 알람 소리를 들으면, 알람을 끄고 조금 더 잘 것이기 때문이다. 이 방법을 사용하면, 매일 아침 더 잤다는	 기분을 느낄 수 있고, 학교도 지각하지 않게 된다.
	현재 상근이가 설정한 알람 시각이 주어졌을 때, 창영이의 방법을 사용한다면, 이를 언제로 고쳐야 하는지 구하는 프로그램을 작성하시오.

	입력
	첫째 줄에 두 정수 H와 M이 주어진다. (0 ≤ H ≤ 23, 0 ≤ M ≤ 59) 그리고 이것은 현재 상근이가 설정한 놓은 알람 시간 H시 M분을 의미한다.

	입력 시간은 24시간 표현을 사용한다. 24시간 표현에서 하루의 시작은 0:0(자정)이고, 끝은 23:59(다음날 자정 1분 전)이다. 시간을 나타낼 때, 불필요한 0은 사용하지 않는다.

	출력
	첫째 줄에 상근이가 창영이의 방법을 사용할 때, 설정해야 하는 알람 시간을 출력한다. (입력과 같은 형태로 출력하면 된다.)

	예제 입력 1
	10 10
	예제 출력 1
	9 25
	예제 입력 2
	0 30
	예제 출력 2
	23 45
	예제 입력 3
	23 40
	예제 출력 3
	22 55
*/

void 알람시계()
{
	int H = 0, M = 0;

	cin >> H >> M;

	if (M >= 45)
	{
		M -= 45;
	}
	else
	{
		if (H <= 0)//12 AM 인경우만
		{
			H = 23;
			M = 60 - abs(M - 45);
		}
		else
		{
			H -= 1;
			M = 60 - abs(M - 45);
		}
	}

	cout << H << " " << M;
}

/*
	https://www.acmicpc.net/problem/1110

	Date : 23.03.09

	문제
	0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.
	26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.
	위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
	N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.

	입력
	첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.

	출력
	첫째 줄에 N의 사이클 길이를 출력한다.

	예제 입력 1
	26
	예제 출력 1
	4
	예제 입력 2
	55
	예제 출력 2
	3
	예제 입력 3
	1
	예제 출력 3
	60
	예제 입력 4
	0
	예제 출력 4
	1
	예제 입력 5
	71
	예제 출력 5
	12
*/

void 더하기사이클()
{
	int a = 0;//0 <= a <= 99, a = 0 ~ 99

	cin >> a;

	int origin = a;

	int digit1;// 1의 자리
	int digit10;// 10의 자리

	int period = 0;
	while (true)
	{
		digit1 = a % 10;
		digit10 = a / 10;

		a = digit1 * 10 + (digit1 + digit10) % 10;

		period++;

		if (a == origin)
		{
			cout << period;
			break;
		}
	}
}